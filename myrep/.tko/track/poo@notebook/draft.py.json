{
    "patches": [
        {
            "label": "2025-10-15_14-19-27",
            "content": "@@ -1,17 +1,20 @@\n class \n-Arm\n+Bateri\n a:%0A    d\n@@ -33,351 +33,161 @@\n self\n-):%0A        self.bullet: int = 25%0A        self.bulletOut: int = 75%0A%0A    def __str__(self):%0A        return f%22Arma com %7Bself.bullet%7D, no pente ainda restam %7Bself.bulletOut%7D%22\n+, capacidade: int):%0A        self.__capacidade: int = capacidade\n %0A    \n-%0A\n     \n-def atirar(self):%0A        if self.bullet == 0:%0A            print(%22fail: sem balas%22)%0A            return%0A        self.bullet -= 1%0A%0A    def recarregar(self, decrement\n+self.__carga: int = capacidade%0A%0Aclass Carregador:%0A    def __init__(self, potencia\n : in\n@@ -202,168 +202,97 @@\n     \n-if \n self.\n-bullet == 25:%0A            print(%22fail: pente cheio%22)%0A            return%0A        if self.bullet %3C 25:%0A            decrement = 25 - self.bullet%0A  \n+__potencia: int = potencia%0A        %0Aclass Notebook:%0A    def __init__(self):%0A\n         \n   se\n@@ -291,325 +291,78 @@\n     \n-  \n self.\n-bulletOut -= decrement%0A            return%0A        self.bullet = 25%0A%0Adef main():%0A    arma = Arma()%0A    while True:%0A        line = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split()%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(arma)%0A%0A%0Amain()\n+__ligado: bool = False%0A        self.__bateria: Bateria %7C None = None%0A\n",
            "lines": "13"
        },
        {
            "label": "2025-10-20_14-38-47",
            "content": "@@ -159,15 +159,18 @@\n let%7D\n- balas,\n+, no pente\n  ain\n@@ -195,25 +195,16 @@\n lletOut%7D\n- no pente\n %22%0A    %0A \n",
            "lines": "38"
        },
        {
            "label": "2025-10-20_14-39-22",
            "content": "@@ -868,67 +868,8 @@\n ma)%0A\n-        elif args%5B0%5D == %22shoot%22:%0A            arma.atirar()%0A\n %0A%0Ama\n",
            "lines": "38"
        },
        {
            "label": "2025-10-20_14-40-22",
            "content": "@@ -3,14 +3,11 @@\n ass \n-Bateri\n+Arm\n a:%0A \n@@ -30,129 +30,74 @@\n self\n-, capacidade: int):%0A        self.__capacidade: int = capacidade%0A        self.__carga: int = capacidade%0A%0Aclass Carregador:\n+):%0A        self.bullet: int = 25%0A        self.bulletOut: int = 75%0A\n %0A   \n@@ -107,172 +107,127 @@\n f __\n-init\n+str\n __(self\n-, potencia: int):%0A        self.__potencia: int = potencia%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado: bool = False%0A%0A    def getLigado\n+):%0A        return f%22Arma com %7Bself.bullet%7D balas, ainda restam %7Bself.bulletOut%7D no pente%22%0A    %0A    def atirar\n (sel\n@@ -246,33 +246,27 @@\n if self.\n-__ligado == False\n+bullet == 0\n :%0A      \n@@ -282,25 +282,23 @@\n nt(%22\n-Status: Desligado\n+fail: sem balas\n %22)%0A \n@@ -327,97 +327,25 @@\n     \n-if \n self.\n-__ligado == True:%0A            print(%22Status: Ligado%22)%0A            return%0A        \n+bullet -= 1%0A\n %0A   \n@@ -353,21 +353,23 @@\n def \n-setLi\n+recarre\n gar(self\n ):%0A \n@@ -356,32 +356,48 @@\n  recarregar(self\n+, decrement: int\n ):%0A        if se\n@@ -403,24 +403,20 @@\n elf.\n-__ligado == True\n+bullet == 25\n :%0A  \n@@ -442,30 +442,18 @@\n il: \n-notebook ja esta ligad\n+pente chei\n o%22)%0A\n@@ -483,145 +483,109 @@\n     \n+if \n self.\n-__ligado = True%0A%0A    def setDesligar(self):%0A        if self.__ligado == False:%0A            print(%22fail: notebook ja esta desligado%22)\n+bullet %3C 25:%0A            decrement = 25 - self.bullet%0A            self.bulletOut -= decrement\n %0A   \n@@ -617,24 +617,19 @@\n elf.\n-__ligado = False\n+bullet = 25\n %0A%0Ade\n@@ -646,27 +646,19 @@\n     \n-notebook = Notebook\n+arma = Arma\n ()%0A \n@@ -856,91 +856,19 @@\n     \n-notebook.getLigado()%0A        elif args%5B0%5D == %22ligar%22:%0A            notebook.setLigar\n+print(arma)\n %0A   \n@@ -893,16 +893,13 @@\n == %22\n-desligar\n+shoot\n %22:%0A \n@@ -913,31 +913,24 @@\n     \n-notebook.setDeslig\n+arma.atir\n ar()%0A\n+%0A%0A\n main\n",
            "lines": "40"
        },
        {
            "label": "2025-10-21_16-11-32",
            "content": "@@ -852,89 +852,8 @@\n se%0A%0A\n-    def usar(self, minutos: int):%0A        return f%22Usado por %7Bminutos%7D minutos%22%0A%0A\n def \n@@ -1161,26 +1161,24 @@\n ook.setLigar\n-()\n %0A        eli\n@@ -1241,74 +1241,8 @@\n r()%0A\n-        elif args%5B0%5D == %22use%22:%0A            notebook.usar(args%5B1%5D)%0A\n main\n",
            "lines": "49"
        },
        {
            "label": "2025-10-22_14-10-23",
            "content": "@@ -886,108 +886,8 @@\n t):%0A\n-        if self.__ligado == False:%0A            print(%22fail: notebook desligado%22)%0A            return%0A\n     \n",
            "lines": "54"
        },
        {
            "label": "2025-10-22_14-13-03",
            "content": "@@ -272,31 +272,11 @@\n self\n-, minutos : int = 0 \n ):%0A\n+\n     \n@@ -310,138 +310,8 @@\n alse\n-%0A        self.__bateria: Bateria  %7C None = None%0A        self.__carregador: Carregador %7C None = None%0A        self.minutos = minutos\n %0A%0A  \n@@ -994,48 +994,44 @@\n     \n-else:%0A            self.\n+return f%22Usado por %7B\n minutos\n- =\n+%7D\n  minutos\n %0A   \n@@ -1030,36 +1030,10 @@\n utos\n+%22\n %0A\n-            return%0A        \n %0Adef\n@@ -1467,27 +1467,8 @@\n     \n-print(f%22Usado por %7B\n note\n@@ -1489,19 +1489,8 @@\n %5B1%5D)\n-%7D minutos%22)\n %0Amai\n",
            "lines": "57"
        },
        {
            "label": "2025-10-22_14-34-44",
            "content": "class Bateria:\n    def __init__(self, capacidade: int):\n        self.__capacidade: int = capacidade\n        self.__carga: int = capacidade\n\nclass Carregador:\n    def __init__(self, potencia: int):\n        self.__potencia: int = potencia\n\nclass Notebook:\n    def __init__(self, minutos : int = 0 ):\n        self.__ligado: bool = False\n        self.__bateria: Bateria  | None = None\n        self.__carregador: Carregador | None = None\n        self.minutos = minutos\n\n    def getLigado(self):\n        if self.__ligado == False:\n            print(\"Status: Desligado\")\n            return\n        if self.__ligado == True:\n            print(\"Status: Ligado\")\n            return\n        \n    def setLigar(self):\n        if self.__ligado == True:\n            print(\"fail: notebook ja esta ligado\")\n            return\n        self.__ligado = True\n\n    def setDesligar(self):\n        if self.__ligado == False:\n            print(\"fail: notebook ja esta desligado\")\n            return\n        self.__ligado = False\n\n    def usar(self, minutos: int):\n        if self.__ligado == False:\n            print(\"fail: notebook desligado\")\n            return\n        else:\n            self.minutos = minutos\n            return\n        \ndef main():\n    notebook = Notebook()\n    while True:\n        line = input()\n        print(\"$\" + line)\n        args: list[str] = line.split()\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            notebook.getLigado()\n        elif args[0] == \"ligar\":\n            notebook.setLigar()\n        elif args[0] == \"desligar\":\n            notebook.setDesligar()\n        elif args[0] == \"use\":\n            print(f\"Usado por {notebook.usar(args[1])} minutos\")\nmain()",
            "lines": "62"
        }
    ]
}